/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OPCH, OPCHInterface } from "../OPCH";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "marketplaceAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "mintToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018d8380380620018d883398101604081905262000034916200016d565b604080518082018252600f81526e09ee0e8d29ac2e4d6cae84086c2e6d608b1b60208083019182528351808501909452600484526309ea086960e31b9084015281519192916200008791600091620000c7565b5080516200009d906001906020840190620000c7565b5050600880546001600160a01b0319166001600160a01b03939093169290921790915550620001dc565b828054620000d5906200019f565b90600052602060002090601f016020900481019282620000f9576000855562000144565b82601f106200011457805160ff191683800117855562000144565b8280016001018555821562000144579182015b828111156200014457825182559160200191906001019062000127565b506200015292915062000156565b5090565b5b8082111562000152576000815560010162000157565b6000602082840312156200018057600080fd5b81516001600160a01b03811681146200019857600080fd5b9392505050565b600181811c90821680620001b457607f821691505b60208210811415620001d657634e487b7160e01b600052602260045260246000fd5b50919050565b6116ec80620001ec6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806342842e0e11610097578063a22cb46511610066578063a22cb465146101ff578063b88d4fde14610212578063c87b56dd14610225578063e985e9c51461023857600080fd5b806342842e0e146101be5780636352211e146101d157806370a08231146101e457806395d89b41146101f757600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806333eba49a1461018a57806340c10f19146101ab57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d6101083660046111c6565b610274565b60405190151581526020015b60405180910390f35b61012a6102c6565b604051610119919061123b565b61014a61014536600461124e565b610358565b6040516001600160a01b039091168152602001610119565b610175610170366004611283565b6103e5565b005b6101756101853660046112ad565b6104fb565b61019d610198366004611375565b61052c565b604051908152602001610119565b6101756101b9366004611283565b61057f565b6101756101cc3660046112ad565b61058d565b61014a6101df36600461124e565b6105a8565b61019d6101f23660046113be565b61061f565b61012a6106a6565b61017561020d3660046113d9565b6106b5565b610175610220366004611415565b6106c0565b61012a61023336600461124e565b6106f8565b61010d610246366004611491565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806102a557506001600160e01b03198216635b5e139f60e01b145b806102c057506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102d5906114c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610301906114c4565b801561034e5780601f106103235761010080835404028352916020019161034e565b820191906000526020600020905b81548152906001019060200180831161033157829003601f168201915b5050505050905090565b60006103638261086f565b6103c95760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103f0826105a8565b9050806001600160a01b0316836001600160a01b0316141561045e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103c0565b336001600160a01b038216148061047a575061047a8133610246565b6104ec5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103c0565b6104f6838361088c565b505050565b61050533826108fa565b6105215760405162461bcd60e51b81526004016103c0906114ff565b6104f68383836109e0565b600061053c600780546001019055565b600061054760075490565b610552906001611566565b905061055e3382610b80565b6105688184610cb3565b6008546102c0906001600160a01b031660016106b5565b6105898282610b80565b5050565b6104f6838383604051806020016040528060008152506106c0565b6000818152600260205260408120546001600160a01b0316806102c05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103c0565b60006001600160a01b03821661068a5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103c0565b506001600160a01b031660009081526003602052604090205490565b6060600180546102d5906114c4565b610589338383610d3e565b6106ca33836108fa565b6106e65760405162461bcd60e51b81526004016103c0906114ff565b6106f284848484610e0d565b50505050565b60606107038261086f565b6107695760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016103c0565b60008281526006602052604081208054610782906114c4565b80601f01602080910402602001604051908101604052809291908181526020018280546107ae906114c4565b80156107fb5780601f106107d0576101008083540402835291602001916107fb565b820191906000526020600020905b8154815290600101906020018083116107de57829003601f168201915b50505050509050600061081960408051602081019091526000815290565b905080516000141561082c575092915050565b81511561085e57808260405160200161084692919061157e565b60405160208183030381529060405292505050919050565b61086784610e40565b949350505050565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906108c1826105a8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006109058261086f565b6109665760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103c0565b6000610971836105a8565b9050806001600160a01b0316846001600160a01b031614806109ac5750836001600160a01b03166109a184610358565b6001600160a01b0316145b8061086757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610867565b826001600160a01b03166109f3826105a8565b6001600160a01b031614610a5b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103c0565b6001600160a01b038216610abd5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103c0565b610ac860008261088c565b6001600160a01b0383166000908152600360205260408120805460019290610af19084906115ad565b90915550506001600160a01b0382166000908152600360205260408120805460019290610b1f908490611566565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610bd65760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103c0565b610bdf8161086f565b15610c2c5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103c0565b6001600160a01b0382166000908152600360205260408120805460019290610c55908490611566565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b610cbc8261086f565b610d1f5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016103c0565b600082815260066020908152604090912082516104f692840190611114565b816001600160a01b0316836001600160a01b03161415610da05760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103c0565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e188484846109e0565b610e2484848484610f18565b6106f25760405162461bcd60e51b81526004016103c0906115c4565b6060610e4b8261086f565b610eaf5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103c0565b6000610ec660408051602081019091526000815290565b90506000815111610ee65760405180602001604052806000815250610f11565b80610ef084611016565b604051602001610f0192919061157e565b6040516020818303038152906040525b9392505050565b60006001600160a01b0384163b1561100b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610f5c903390899088908890600401611616565b6020604051808303816000875af1925050508015610f97575060408051601f3d908101601f19168201909252610f9491810190611653565b60015b610ff1573d808015610fc5576040519150601f19603f3d011682016040523d82523d6000602084013e610fca565b606091505b508051610fe95760405162461bcd60e51b81526004016103c0906115c4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610867565b506001949350505050565b60608161103a5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611064578061104e81611670565b915061105d9050600a836116a1565b915061103e565b60008167ffffffffffffffff81111561107f5761107f6112e9565b6040519080825280601f01601f1916602001820160405280156110a9576020820181803683370190505b5090505b8415610867576110be6001836115ad565b91506110cb600a866116b5565b6110d6906030611566565b60f81b8183815181106110eb576110eb6116c9565b60200101906001600160f81b031916908160001a90535061110d600a866116a1565b94506110ad565b828054611120906114c4565b90600052602060002090601f0160209004810192826111425760008555611188565b82601f1061115b57805160ff1916838001178555611188565b82800160010185558215611188579182015b8281111561118857825182559160200191906001019061116d565b50611194929150611198565b5090565b5b808211156111945760008155600101611199565b6001600160e01b0319811681146111c357600080fd5b50565b6000602082840312156111d857600080fd5b8135610f11816111ad565b60005b838110156111fe5781810151838201526020016111e6565b838111156106f25750506000910152565b600081518084526112278160208601602086016111e3565b601f01601f19169290920160200192915050565b602081526000610f11602083018461120f565b60006020828403121561126057600080fd5b5035919050565b80356001600160a01b038116811461127e57600080fd5b919050565b6000806040838503121561129657600080fd5b61129f83611267565b946020939093013593505050565b6000806000606084860312156112c257600080fd5b6112cb84611267565b92506112d960208501611267565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561131a5761131a6112e9565b604051601f8501601f19908116603f01168101908282118183101715611342576113426112e9565b8160405280935085815286868601111561135b57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561138757600080fd5b813567ffffffffffffffff81111561139e57600080fd5b8201601f810184136113af57600080fd5b610867848235602084016112ff565b6000602082840312156113d057600080fd5b610f1182611267565b600080604083850312156113ec57600080fd5b6113f583611267565b91506020830135801515811461140a57600080fd5b809150509250929050565b6000806000806080858703121561142b57600080fd5b61143485611267565b935061144260208601611267565b925060408501359150606085013567ffffffffffffffff81111561146557600080fd5b8501601f8101871361147657600080fd5b611485878235602084016112ff565b91505092959194509250565b600080604083850312156114a457600080fd5b6114ad83611267565b91506114bb60208401611267565b90509250929050565b600181811c908216806114d857607f821691505b602082108114156114f957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000821982111561157957611579611550565b500190565b600083516115908184602088016111e3565b8351908301906115a48183602088016111e3565b01949350505050565b6000828210156115bf576115bf611550565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906116499083018461120f565b9695505050505050565b60006020828403121561166557600080fd5b8151610f11816111ad565b600060001982141561168457611684611550565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826116b0576116b061168b565b500490565b6000826116c4576116c461168b565b500690565b634e487b7160e01b600052603260045260246000fdfea164736f6c634300080a000a";

type OPCHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OPCHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OPCH__factory extends ContractFactory {
  constructor(...args: OPCHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    marketplaceAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OPCH> {
    return super.deploy(marketplaceAddress, overrides || {}) as Promise<OPCH>;
  }
  getDeployTransaction(
    marketplaceAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(marketplaceAddress, overrides || {});
  }
  attach(address: string): OPCH {
    return super.attach(address) as OPCH;
  }
  connect(signer: Signer): OPCH__factory {
    return super.connect(signer) as OPCH__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OPCHInterface {
    return new utils.Interface(_abi) as OPCHInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OPCH {
    return new Contract(address, _abi, signerOrProvider) as OPCH;
  }
}
