/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OPM, OPMInterface } from "../OPM";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600a81526913dc1d1a53585c9ad95d60b21b6020808301918252835180850190945260038452624f504d60e81b9084015281519192916200005f916000916200007e565b508051620000759060019060208401906200007e565b50505062000161565b8280546200008c9062000124565b90600052602060002090601f016020900481019282620000b05760008555620000fb565b82601f10620000cb57805160ff1916838001178555620000fb565b82800160010185558215620000fb579182015b82811115620000fb578251825591602001919060010190620000de565b50620001099291506200010d565b5090565b5b808211156200010957600081556001016200010e565b600181811c908216806200013957607f821691505b602082108114156200015b57634e487b7160e01b600052602260045260246000fd5b50919050565b6117b380620001716000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806342842e0e116100a257806395d89b411161007157806395d89b4114610224578063a22cb4651461022c578063b88d4fde1461023f578063c87b56dd14610252578063e985e9c51461026557600080fd5b806342842e0e146101d85780634f6ccce7146101eb5780636352211e146101fe57806370a082311461021157600080fd5b806318160ddd116100de57806318160ddd1461018d57806323b872dd1461019f5780632f745c59146101b257806340c10f19146101c557600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e3660046112d6565b6102a1565b60405190151581526020015b60405180910390f35b6101406102cc565b60405161012f919061134b565b61016061015b36600461135e565b61035e565b6040516001600160a01b03909116815260200161012f565b61018b610186366004611393565b6103f8565b005b6008545b60405190815260200161012f565b61018b6101ad3660046113bd565b61050e565b6101916101c0366004611393565b61053f565b61018b6101d3366004611393565b6105d5565b61018b6101e63660046113bd565b6105e3565b6101916101f936600461135e565b6105fe565b61016061020c36600461135e565b610691565b61019161021f3660046113f9565b610708565b61014061078f565b61018b61023a366004611414565b61079e565b61018b61024d366004611466565b6107a9565b61014061026036600461135e565b6107e1565b610123610273366004611542565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663780e9d6360e01b14806102c657506102c6826108c9565b92915050565b6060600080546102db90611575565b80601f016020809104026020016040519081016040528092919081815260200182805461030790611575565b80156103545780601f1061032957610100808354040283529160200191610354565b820191906000526020600020905b81548152906001019060200180831161033757829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103dc5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061040382610691565b9050806001600160a01b0316836001600160a01b031614156104715760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103d3565b336001600160a01b038216148061048d575061048d8133610273565b6104ff5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103d3565b6105098383610919565b505050565b6105183382610987565b6105345760405162461bcd60e51b81526004016103d3906115b0565b610509838383610a7e565b600061054a83610708565b82106105ac5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016103d3565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6105df8282610c29565b5050565b610509838383604051806020016040528060008152506107a9565b600061060960085490565b821061066c5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016103d3565b6008828154811061067f5761067f611601565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806102c65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103d3565b60006001600160a01b0382166107735760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103d3565b506001600160a01b031660009081526003602052604090205490565b6060600180546102db90611575565b6105df338383610d77565b6107b33383610987565b6107cf5760405162461bcd60e51b81526004016103d3906115b0565b6107db84848484610e46565b50505050565b6000818152600260205260409020546060906001600160a01b03166108605760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103d3565b600061087760408051602081019091526000815290565b9050600081511161089757604051806020016040528060008152506108c2565b806108a184610e79565b6040516020016108b2929190611617565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b14806108fa57506001600160e01b03198216635b5e139f60e01b145b806102c657506301ffc9a760e01b6001600160e01b03198316146102c6565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061094e82610691565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610a005760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103d3565b6000610a0b83610691565b9050806001600160a01b0316846001600160a01b03161480610a465750836001600160a01b0316610a3b8461035e565b6001600160a01b0316145b80610a7657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610a9182610691565b6001600160a01b031614610af95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b60648201526084016103d3565b6001600160a01b038216610b5b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103d3565b610b66838383610f77565b610b71600082610919565b6001600160a01b0383166000908152600360205260408120805460019290610b9a90849061165c565b90915550506001600160a01b0382166000908152600360205260408120805460019290610bc8908490611673565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610c7f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103d3565b6000818152600260205260409020546001600160a01b031615610ce45760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103d3565b610cf060008383610f77565b6001600160a01b0382166000908152600360205260408120805460019290610d19908490611673565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b816001600160a01b0316836001600160a01b03161415610dd95760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103d3565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610e51848484610a7e565b610e5d8484848461102f565b6107db5760405162461bcd60e51b81526004016103d39061168b565b606081610e9d5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610ec75780610eb1816116dd565b9150610ec09050600a8361170e565b9150610ea1565b60008167ffffffffffffffff811115610ee257610ee2611450565b6040519080825280601f01601f191660200182016040528015610f0c576020820181803683370190505b5090505b8415610a7657610f2160018361165c565b9150610f2e600a86611722565b610f39906030611673565b60f81b818381518110610f4e57610f4e611601565b60200101906001600160f81b031916908160001a905350610f70600a8661170e565b9450610f10565b6001600160a01b038316610fd257610fcd81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610ff5565b816001600160a01b0316836001600160a01b031614610ff557610ff5838261112d565b6001600160a01b03821661100c57610509816111ca565b826001600160a01b0316826001600160a01b031614610509576105098282611279565b60006001600160a01b0384163b1561112257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611073903390899088908890600401611736565b6020604051808303816000875af19250505080156110ae575060408051601f3d908101601f191682019092526110ab91810190611773565b60015b611108573d8080156110dc576040519150601f19603f3d011682016040523d82523d6000602084013e6110e1565b606091505b5080516111005760405162461bcd60e51b81526004016103d39061168b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610a76565b506001949350505050565b6000600161113a84610708565b611144919061165c565b600083815260076020526040902054909150808214611197576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906111dc9060019061165c565b6000838152600960205260408120546008805493945090928490811061120457611204611601565b90600052602060002001549050806008838154811061122557611225611601565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548061125d5761125d611790565b6001900381819060005260206000200160009055905550505050565b600061128483610708565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b0319811681146112d357600080fd5b50565b6000602082840312156112e857600080fd5b81356108c2816112bd565b60005b8381101561130e5781810151838201526020016112f6565b838111156107db5750506000910152565b600081518084526113378160208601602086016112f3565b601f01601f19169290920160200192915050565b6020815260006108c2602083018461131f565b60006020828403121561137057600080fd5b5035919050565b80356001600160a01b038116811461138e57600080fd5b919050565b600080604083850312156113a657600080fd5b6113af83611377565b946020939093013593505050565b6000806000606084860312156113d257600080fd5b6113db84611377565b92506113e960208501611377565b9150604084013590509250925092565b60006020828403121561140b57600080fd5b6108c282611377565b6000806040838503121561142757600080fd5b61143083611377565b91506020830135801515811461144557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561147c57600080fd5b61148585611377565b935061149360208601611377565b925060408501359150606085013567ffffffffffffffff808211156114b757600080fd5b818701915087601f8301126114cb57600080fd5b8135818111156114dd576114dd611450565b604051601f8201601f19908116603f0116810190838211818310171561150557611505611450565b816040528281528a602084870101111561151e57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561155557600080fd5b61155e83611377565b915061156c60208401611377565b90509250929050565b600181811c9082168061158957607f821691505b602082108114156115aa57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b600083516116298184602088016112f3565b83519083019061163d8183602088016112f3565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561166e5761166e611646565b500390565b6000821982111561168657611686611646565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006000198214156116f1576116f1611646565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261171d5761171d6116f8565b500490565b600082611731576117316116f8565b500690565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906117699083018461131f565b9695505050505050565b60006020828403121561178557600080fd5b81516108c2816112bd565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080a000a";

type OPMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OPMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OPM__factory extends ContractFactory {
  constructor(...args: OPMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OPM> {
    return super.deploy(overrides || {}) as Promise<OPM>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OPM {
    return super.attach(address) as OPM;
  }
  connect(signer: Signer): OPM__factory {
    return super.connect(signer) as OPM__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OPMInterface {
    return new utils.Interface(_abi) as OPMInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): OPM {
    return new Contract(address, _abi, signerOrProvider) as OPM;
  }
}
